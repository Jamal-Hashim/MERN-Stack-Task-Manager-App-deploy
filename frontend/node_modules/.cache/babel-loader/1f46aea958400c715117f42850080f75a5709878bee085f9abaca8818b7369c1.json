{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Project Task Manager App\\\\frontend\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\n// import { ToastContainer } from 'react-toastify';\n// import { createTask, DeleteTaskById, getAllTaks, UpdateTaskById } from './api';\n// import { notify } from './utils';\n\n// function TaskManager() {\n\n//     const [input, setInput] = useState('');\n//     const [tasks, setTasks] = useState([]);\n//     const [copyTask, setCopyTask] = useState([]);\n//     const [updateTask, setUpdateTask] = useState(null);\n\n//     const handleTask = () => {\n//         if (updateTask && input) {\n//             // update api call\n//             const obj = {\n//                 taskName: input,\n//                 isDone: updateTask.isDone,\n//                 _id: updateTask._id\n//             }\n//             handleUpdate(obj);\n\n//         } else if (updateTask === null && input) {\n//             // Create api call\n\n//             handleAddTask();\n//         }\n//         setInput('');\n//     }\n\n//     useEffect(() => {\n//         if (updateTask) {\n//             setInput(updateTask.taskName);\n//         }\n//     }, [updateTask]);\n\n//     const handleAddTask = async () => {\n//         const obj = {\n//             taskName: input,\n//             isDone: false\n//         }\n//         try {\n//             const { success, message } = await createTask(obj);\n//             if (success) {\n//                 // show succes toast\n//                 notify(message, 'success');\n//             } else {\n//                 // show error toast\n//                 notify(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             notify(\"Failed to Create to Task\", 'error');\n//         }\n\n//     }\n\n//     const fetchAllTasks = async () => {\n//         try {\n//             const { data } = await getAllTaks();\n//             setTasks(data);\n//             setCopyTask(data);\n\n//         } catch (error) {\n//             console.error(error);\n//             notify(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n//     useEffect(() => {\n//         fetchAllTasks();\n//     }, []);\n\n//     const handleDeleteTask = async (id) => {\n//         try {\n//             const { success, message } = await DeleteTaskById(id);\n\n//             if (success) {\n//                 // show succes toast\n//                 notify(message, 'success');\n//             } else {\n//                 // show error toast\n//                 notify(message, 'error');\n//             }\n\n//             fetchAllTasks();\n//         } catch (error) {\n//             console.error(error);\n//             notify(\"Failed to Delete Task\", 'error');\n//         }\n//     }\n\n//     const handleCheckAndUncheck = async (item) => {\n//         const { _id, isDone, taskName } = item;\n//         const obj = {\n//             taskName,\n//             isDone: !isDone\n//         }\n//         try {\n//             const { success, message } = await UpdateTaskById(_id, obj)\n//             if (success) {\n//                 // show succes toast\n//                 notify(message, 'success');\n//             } else {\n//                 // show error toast\n//                 notify(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             notify(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n\n//     const handleUpdate = async (item) => {\n//         const { _id, isDone, taskName } = item;\n//         const obj = {\n//             taskName,\n//             isDone: isDone\n//         }\n//         try {\n//             const { success, message } = await UpdateTaskById(_id, obj)\n//             if (success) {\n//                 // show succes toast\n//                 notify(message, 'success');\n//             } else {\n//                 // show error toast\n//                 notify(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             notify(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n\n//     const handleSearch = (e) => {\n//         const term = e.target.value.toLowerCase();\n//         const oldTasks = [...copyTask];\n//         const results = oldTasks.filter((item) => item.taskName.toLowerCase().includes(term));\n//         setTasks(results);\n//     }\n\n//     return (\n//         <div className='d-flex flex-column align-items-center w-50 m-auto mt-5'>\n//             <h1 className='mb-4'>Task Manager</h1>\n\n//             {/* Input and Search Box */}\n\n//             <div className='d-flex justify-content-between align-items-center mb-4 w-100'>\n//                 <div className='input-group flex-grow-1 me-2'>\n//                     <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder='Add a new Task' className='form-control mw-1' />\n//                     <button onClick={handleTask} className='btn btn-success btn-sm me-2'>\n//                         <FaPlus className='m-2' />\n//                     </button>\n//                 </div>\n//                 <div className='input-group flex-grow-1'>\n//                     <span className='input-group-text'>\n//                         <FaSearch />\n//                     </span>\n//                     <input onChange={handleSearch} type=\"text\" placeholder='Search Task' className='form-control mw-1' />\n//                 </div>\n//             </div>\n\n//             {/* Lists of items */}\n\n//             <div className='d-flex flex-column w-100'>\n//                 {\n//                     tasks.map((item) => (\n//                         <div key={item._id} className=\"m-2 p-2 border bg-light w-100 rounded-3 d-flex justify-content-between align-items-center flex-wrap\">\n//                             <span className={item.isDone ? 'text-decoration-line-through' : ''}>{item.taskName}</span>\n//                             <div className=\"mt-2 mt-sm-0\">\n//                                 <button onClick={() => handleCheckAndUncheck(item)}\n//                                     className='btn btn-success btn-sm me-2' type='button'>\n//                                     <FaCheck />\n//                                 </button>\n//                                 <button onClick={() => setUpdateTask(item)}\n//                                     className='btn btn-primary btn-sm me-2' type='button'>\n//                                     <FaPenAlt />\n//                                 </button>\n//                                 <button onClick={() => handleDeleteTask(item._id)}\n//                                     className='btn btn-danger btn-sm me-2' type='button'>\n//                                     <FaTrash />\n//                                 </button>\n//                             </div>\n//                         </div>\n//                     ))\n//                 }\n//             </div>\n\n//             {/* Toastify */}\n\n//             <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\n//         </div>\n//     )\n// }\n// export default TaskManager;\n\nimport React, { useEffect, useState } from 'react';\nimport { FaCheck, FaPencilAlt, FaPlus, FaSearch, FaTrash } from 'react-icons/fa';\nimport { ToastContainer } from 'react-toastify';\nimport { CreateTask, DeleteTaskById, GetAllTasks, UpdateTaskById } from './api';\nimport { notify } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManager() {\n  _s();\n  const [input, setInput] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [copyTasks, setCopyTasks] = useState([]);\n  const [updateTask, setUpdateTask] = useState(null);\n  const handleTask = () => {\n    if (updateTask && input) {\n      //upadte api call\n      console.log('update api call');\n      const obj = {\n        taskName: input,\n        isDone: updateTask.isDone,\n        _id: updateTask._id\n      };\n      handleUpdateItem(obj);\n    } else if (updateTask === null && input) {\n      console.log('create api call');\n      //create api call\n      handleAddTask();\n    }\n    setInput('');\n  };\n  useEffect(() => {\n    if (updateTask) {\n      setInput(updateTask.taskName);\n    }\n  }, [updateTask]);\n  const handleAddTask = async () => {\n    const obj = {\n      taskName: input,\n      isDone: false\n    };\n    try {\n      const {\n        success,\n        message\n      } = await CreateTask(obj);\n      if (success) {\n        //show success toast\n        notify(message, 'success');\n      } else {\n        //show error toast\n        notify(message, 'error');\n      }\n      fetchAllTasks();\n    } catch (err) {\n      console.error(err);\n      notify('Failed to create task', 'error');\n    }\n  };\n  const fetchAllTasks = async () => {\n    try {\n      const {\n        data\n      } = await GetAllTasks();\n      setTasks(data);\n      setCopyTasks(data);\n    } catch (err) {\n      console.error(err);\n      notify('Failed to create task', 'error');\n    }\n  };\n  useEffect(() => {\n    fetchAllTasks();\n  }, []);\n  const handleDeleteTask = async id => {\n    try {\n      const {\n        success,\n        message\n      } = await DeleteTaskById(id);\n      if (success) {\n        //show success toast\n        notify(message, 'success');\n      } else {\n        //show error toast\n        notify(message, 'error');\n      }\n      fetchAllTasks();\n    } catch (err) {\n      console.error(err);\n      notify('Failed to create task', 'error');\n    }\n  };\n  const handleCheckAndUncheck = async item => {\n    const {\n      _id,\n      isDone,\n      taskName\n    } = item;\n    const obj = {\n      taskName,\n      isDone: !isDone\n    };\n    try {\n      const {\n        success,\n        message\n      } = await UpdateTaskById(_id, obj);\n      if (success) {\n        //show success toast\n        notify(message, 'success');\n      } else {\n        //show error toast\n        notify(message, 'error');\n      }\n      fetchAllTasks();\n    } catch (err) {\n      console.error(err);\n      notify('Failed to create task', 'error');\n    }\n  };\n  const handleUpdateItem = async item => {\n    const {\n      _id,\n      isDone,\n      taskName\n    } = item;\n    const obj = {\n      taskName,\n      isDone: isDone\n    };\n    try {\n      const {\n        success,\n        message\n      } = await UpdateTaskById(_id, obj);\n      if (success) {\n        //show success toast\n        notify(message, 'success');\n      } else {\n        //show error toast\n        notify(message, 'error');\n      }\n      fetchAllTasks();\n    } catch (err) {\n      console.error(err);\n      notify('Failed to create task', 'error');\n    }\n  };\n  const handleSearch = e => {\n    const term = e.target.value.toLowerCase();\n    const oldTasks = [...copyTasks];\n    const results = oldTasks.filter(item => item.taskName.toLowerCase().includes(term));\n    setTasks(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center\\r w-50 m-auto mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Task Manager App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\\r align-items-center mb-4 w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group flex-grow-1 me-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          className: \"form-control me-1\",\n          placeholder: \"Add a new Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTask,\n          className: \"btn btn-success btn-sm me-2\",\n          children: /*#__PURE__*/_jsxDEV(FaPlus, {\n            className: \"m-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group flex-grow-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleSearch,\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Search tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column w-100\",\n      children: tasks.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-2 p-2 border bg-light\\r w-100 rounded-3 d-flex justify-content-between\\r align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: item.isDone ? 'text-decoration-line-through' : '',\n          children: item.taskName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCheckAndUncheck(item),\n            className: \"btn btn-success\\r btn-sm me-2\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setUpdateTask(item),\n            className: \"btn btn-primary\\r btn-sm me-2\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FaPencilAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(item._id),\n            className: \"btn btn-danger\\r btn-sm me-2\",\n            type: \"button\",\n            children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 29\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskManager, \"TIjuRX4pVnvceFADIhLV2KlOF/c=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useEffect","useState","FaCheck","FaPencilAlt","FaPlus","FaSearch","FaTrash","ToastContainer","CreateTask","DeleteTaskById","GetAllTasks","UpdateTaskById","notify","jsxDEV","_jsxDEV","TaskManager","_s","input","setInput","tasks","setTasks","copyTasks","setCopyTasks","updateTask","setUpdateTask","handleTask","console","log","obj","taskName","isDone","_id","handleUpdateItem","handleAddTask","success","message","fetchAllTasks","err","error","data","handleDeleteTask","id","handleCheckAndUncheck","item","handleSearch","e","term","target","value","toLowerCase","oldTasks","results","filter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","position","autoClose","hideProgressBar","_c","$RefreshReg$"],"sources":["D:/Projects/Project Task Manager App/frontend/src/TaskManager.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\r\n// import { ToastContainer } from 'react-toastify';\r\n// import { createTask, DeleteTaskById, getAllTaks, UpdateTaskById } from './api';\r\n// import { notify } from './utils';\r\n\r\n// function TaskManager() {\r\n\r\n//     const [input, setInput] = useState('');\r\n//     const [tasks, setTasks] = useState([]);\r\n//     const [copyTask, setCopyTask] = useState([]);\r\n//     const [updateTask, setUpdateTask] = useState(null);\r\n\r\n//     const handleTask = () => {\r\n//         if (updateTask && input) {\r\n//             // update api call\r\n//             const obj = {\r\n//                 taskName: input,\r\n//                 isDone: updateTask.isDone,\r\n//                 _id: updateTask._id\r\n//             }\r\n//             handleUpdate(obj);\r\n\r\n//         } else if (updateTask === null && input) {\r\n//             // Create api call\r\n\r\n//             handleAddTask();\r\n//         }\r\n//         setInput('');\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         if (updateTask) {\r\n//             setInput(updateTask.taskName);\r\n//         }\r\n//     }, [updateTask]);\r\n\r\n//     const handleAddTask = async () => {\r\n//         const obj = {\r\n//             taskName: input,\r\n//             isDone: false\r\n//         }\r\n//         try {\r\n//             const { success, message } = await createTask(obj);\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 notify(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 notify(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             notify(\"Failed to Create to Task\", 'error');\r\n//         }\r\n\r\n//     }\r\n\r\n//     const fetchAllTasks = async () => {\r\n//         try {\r\n//             const { data } = await getAllTaks();\r\n//             setTasks(data);\r\n//             setCopyTask(data);\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             notify(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n//     useEffect(() => {\r\n//         fetchAllTasks();\r\n//     }, []);\r\n\r\n//     const handleDeleteTask = async (id) => {\r\n//         try {\r\n//             const { success, message } = await DeleteTaskById(id);\r\n\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 notify(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 notify(message, 'error');\r\n//             }\r\n\r\n//             fetchAllTasks();\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             notify(\"Failed to Delete Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleCheckAndUncheck = async (item) => {\r\n//         const { _id, isDone, taskName } = item;\r\n//         const obj = {\r\n//             taskName,\r\n//             isDone: !isDone\r\n//         }\r\n//         try {\r\n//             const { success, message } = await UpdateTaskById(_id, obj)\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 notify(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 notify(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             notify(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleUpdate = async (item) => {\r\n//         const { _id, isDone, taskName } = item;\r\n//         const obj = {\r\n//             taskName,\r\n//             isDone: isDone\r\n//         }\r\n//         try {\r\n//             const { success, message } = await UpdateTaskById(_id, obj)\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 notify(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 notify(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             notify(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleSearch = (e) => {\r\n//         const term = e.target.value.toLowerCase();\r\n//         const oldTasks = [...copyTask];\r\n//         const results = oldTasks.filter((item) => item.taskName.toLowerCase().includes(term));\r\n//         setTasks(results);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='d-flex flex-column align-items-center w-50 m-auto mt-5'>\r\n//             <h1 className='mb-4'>Task Manager</h1>\r\n\r\n//             {/* Input and Search Box */}\r\n\r\n//             <div className='d-flex justify-content-between align-items-center mb-4 w-100'>\r\n//                 <div className='input-group flex-grow-1 me-2'>\r\n//                     <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder='Add a new Task' className='form-control mw-1' />\r\n//                     <button onClick={handleTask} className='btn btn-success btn-sm me-2'>\r\n//                         <FaPlus className='m-2' />\r\n//                     </button>\r\n//                 </div>\r\n//                 <div className='input-group flex-grow-1'>\r\n//                     <span className='input-group-text'>\r\n//                         <FaSearch />\r\n//                     </span>\r\n//                     <input onChange={handleSearch} type=\"text\" placeholder='Search Task' className='form-control mw-1' />\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Lists of items */}\r\n\r\n//             <div className='d-flex flex-column w-100'>\r\n//                 {\r\n//                     tasks.map((item) => (\r\n//                         <div key={item._id} className=\"m-2 p-2 border bg-light w-100 rounded-3 d-flex justify-content-between align-items-center flex-wrap\">\r\n//                             <span className={item.isDone ? 'text-decoration-line-through' : ''}>{item.taskName}</span>\r\n//                             <div className=\"mt-2 mt-sm-0\">\r\n//                                 <button onClick={() => handleCheckAndUncheck(item)}\r\n//                                     className='btn btn-success btn-sm me-2' type='button'>\r\n//                                     <FaCheck />\r\n//                                 </button>\r\n//                                 <button onClick={() => setUpdateTask(item)}\r\n//                                     className='btn btn-primary btn-sm me-2' type='button'>\r\n//                                     <FaPenAlt />\r\n//                                 </button>\r\n//                                 <button onClick={() => handleDeleteTask(item._id)}\r\n//                                     className='btn btn-danger btn-sm me-2' type='button'>\r\n//                                     <FaTrash />\r\n//                                 </button>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))\r\n//                 }\r\n//             </div>\r\n\r\n//             {/* Toastify */}\r\n\r\n//             <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\r\n//         </div>\r\n//     )\r\n// }\r\n// export default TaskManager;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { FaCheck, FaPencilAlt, FaPlus, FaSearch, FaTrash } from 'react-icons/fa';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CreateTask, DeleteTaskById, GetAllTasks, UpdateTaskById } from './api';\r\nimport { notify } from './utils';\r\nfunction TaskManager() {\r\n    const [input, setInput] = useState('');\r\n    const [tasks, setTasks] = useState([]);\r\n    const [copyTasks, setCopyTasks] = useState([]);\r\n    const [updateTask, setUpdateTask] = useState(null);\r\n\r\n    const handleTask = () => {\r\n        if (updateTask && input) {\r\n            //upadte api call\r\n            console.log('update api call');\r\n            const obj = {\r\n                taskName: input,\r\n                isDone: updateTask.isDone,\r\n                _id: updateTask._id\r\n            }\r\n            handleUpdateItem(obj);\r\n        } else if (updateTask === null && input) {\r\n            console.log('create api call')\r\n            //create api call\r\n            handleAddTask();\r\n        }\r\n        setInput('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (updateTask) {\r\n            setInput(updateTask.taskName);\r\n        }\r\n    }, [updateTask])\r\n\r\n    const handleAddTask = async () => {\r\n        const obj = {\r\n            taskName: input,\r\n            isDone: false\r\n        }\r\n        try {\r\n            const { success, message } =\r\n                await CreateTask(obj);\r\n            if (success) {\r\n                //show success toast\r\n                notify(message, 'success')\r\n            } else {\r\n                //show error toast\r\n                notify(message, 'error')\r\n            }\r\n            fetchAllTasks()\r\n        } catch (err) {\r\n            console.error(err);\r\n            notify('Failed to create task', 'error')\r\n        }\r\n    }\r\n\r\n    const fetchAllTasks = async () => {\r\n        try {\r\n            const { data } =\r\n                await GetAllTasks();\r\n            setTasks(data);\r\n            setCopyTasks(data);\r\n        } catch (err) {\r\n            console.error(err);\r\n            notify('Failed to create task', 'error')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchAllTasks()\r\n    }, [])\r\n\r\n\r\n    const handleDeleteTask = async (id) => {\r\n        try {\r\n            const { success, message } = await DeleteTaskById(id);\r\n            if (success) {\r\n                //show success toast\r\n                notify(message, 'success')\r\n            } else {\r\n                //show error toast\r\n                notify(message, 'error')\r\n            }\r\n            fetchAllTasks()\r\n        } catch (err) {\r\n            console.error(err);\r\n            notify('Failed to create task', 'error')\r\n        }\r\n    }\r\n\r\n    const handleCheckAndUncheck = async (item) => {\r\n        const { _id, isDone, taskName } = item;\r\n        const obj = {\r\n            taskName,\r\n            isDone: !isDone\r\n        }\r\n        try {\r\n            const { success, message } = await UpdateTaskById(_id, obj);\r\n            if (success) {\r\n                //show success toast\r\n                notify(message, 'success')\r\n            } else {\r\n                //show error toast\r\n                notify(message, 'error')\r\n            }\r\n            fetchAllTasks()\r\n        } catch (err) {\r\n            console.error(err);\r\n            notify('Failed to create task', 'error')\r\n        }\r\n    }\r\n\r\n    const handleUpdateItem = async (item) => {\r\n        const { _id, isDone, taskName } = item;\r\n        const obj = {\r\n            taskName,\r\n            isDone: isDone\r\n        }\r\n        try {\r\n            const { success, message } = await UpdateTaskById(_id, obj);\r\n            if (success) {\r\n                //show success toast\r\n                notify(message, 'success')\r\n            } else {\r\n                //show error toast\r\n                notify(message, 'error')\r\n            }\r\n            fetchAllTasks()\r\n        } catch (err) {\r\n            console.error(err);\r\n            notify('Failed to create task', 'error')\r\n        }\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        const term = e.target.value.toLowerCase();\r\n        const oldTasks = [...copyTasks];\r\n        const results = oldTasks.filter((item) => item.taskName.toLowerCase().includes(term));\r\n        setTasks(results);\r\n    }\r\n    return (\r\n        <div className='d-flex flex-column align-items-center\r\n        w-50 m-auto mt-5'>\r\n            <h1 className='mb-4'>Task Manager App</h1>\r\n            {/* Input and Search box */}\r\n            <div className='d-flex justify-content-between\r\n            align-items-center mb-4 w-100'>\r\n                <div className='input-group flex-grow-1 me-2'>\r\n                    <input type='text'\r\n                        value={input}\r\n                        onChange={\r\n                            (e) => setInput(e.target.value)}\r\n                        className='form-control me-1'\r\n                        placeholder='Add a new Task'\r\n                    />\r\n                    <button\r\n                        onClick={handleTask}\r\n                        className='btn btn-success btn-sm me-2'\r\n                    >\r\n                        <FaPlus className='m-2' />\r\n                    </button>\r\n                </div>\r\n\r\n                <div className='input-group flex-grow-1'>\r\n                    <span\r\n                        className='input-group-text'\r\n                    >\r\n                        <FaSearch />\r\n                    </span>\r\n                    <input\r\n                        onChange={handleSearch}\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Search tasks'\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* List of items */}\r\n            <div className='d-flex flex-column w-100'>\r\n                {\r\n                    tasks.map((item) => (\r\n                        <div key={item._id} className='m-2 p-2 border bg-light\r\n                w-100 rounded-3 d-flex justify-content-between\r\n                align-items-center'>\r\n                            <span\r\n                                className={item.isDone ? 'text-decoration-line-through' : ''}\r\n                            >{item.taskName}\r\n                            </span>\r\n\r\n                            <div className=''>\r\n                                <button\r\n                                    onClick={() => handleCheckAndUncheck(item)}\r\n                                    className='btn btn-success\r\n                            btn-sm me-2'\r\n                                    type='button'>\r\n                                    <FaCheck />\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => setUpdateTask(item)}\r\n                                    className='btn btn-primary\r\n                            btn-sm me-2'\r\n                                    type='button'>\r\n                                    <FaPencilAlt />\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => handleDeleteTask(item._id)}\r\n                                    className='btn btn-danger\r\n                            btn-sm me-2'\r\n                                    type='button'>\r\n                                    <FaTrash />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            {/* Toastify */}\r\n            <ToastContainer\r\n                position='top-right'\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskManager"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAgB;AAChF,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,UAAU,EAAEC,cAAc,EAAEC,WAAW,EAAEC,cAAc,QAAQ,OAAO;AAC/E,SAASC,MAAM,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,WAAWA,CAAA,EAAG;EAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}