{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Project Task Manager App\\\\frontend\\\\src\\\\TaskManager.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\n// import { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\n// import { toast, ToastContainer } from 'react-toastify';\n// import { createTask, DeleteTaskById, getAllTaks, UpdateTaskById } from './api';\n\n// function TaskManager() {\n\n//     const [input, setInput] = useState('');\n//     const [tasks, setTasks] = useState([]);\n//     const [copyTask, setCopyTask] = useState([]);\n//     const [updateTask, setUpdateTask] = useState(null);\n\n//     const handleTask = () => {\n//         if (updateTask && input) {\n//             // update api call\n//             const obj = {\n//                 taskName: input,\n//                 isDone: updateTask.isDone,\n//                 _id: updateTask._id\n//             }\n//             handleUpdate(obj);\n\n//         } else if (updateTask === null && input) {\n//             // Create api call\n\n//             handleAddTask();\n//         }\n//         setInput('');\n//     }\n\n//     useEffect(() => {\n//         if (updateTask) {\n//             setInput(updateTask.taskName);\n//         }\n//     }, [updateTask]);\n\n//     const handleAddTask = async () => {\n//         const obj = {\n//             taskName: input,\n//             isDone: false\n//         }\n//         try {\n//             const { success, message } = await createTask(obj);\n//             if (success) {\n//                 // show succes toast\n//                 toast(message, 'success');\n//             } else {\n//                 // show error toast\n//                 toast(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             toast(\"Failed to Create to Task\", 'error');\n//         }\n\n//     }\n\n//     const fetchAllTasks = async () => {\n//         try {\n//             const { data } = await getAllTaks();\n//             setTasks(data);\n//             setCopyTask(data);\n\n//         } catch (error) {\n//             console.error(error);\n//             toast(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n//     useEffect(() => {\n//         fetchAllTasks();\n//     }, []);\n\n//     const handleDeleteTask = async (id) => {\n//         try {\n//             const { success, message } = await DeleteTaskById(id)\n//             if (success) {\n//                 // show succes toast\n//                 toast(message, 'success');\n//             } else {\n//                 // show error toast\n//                 toast(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             toast(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n\n//     const handleCheckAndUncheck = async (item) => {\n//         const { _id, isDone, taskName } = item;\n//         const obj = {\n//             taskName,\n//             isDone: !isDone\n//         }\n//         try {\n//             const { success, message } = await UpdateTaskById(_id, obj)\n//             if (success) {\n//                 // show succes toast\n//                 toast(message, 'success');\n//             } else {\n//                 // show error toast\n//                 toast(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             toast(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n\n//     const handleUpdate = async (item) => {\n//         const { _id, isDone, taskName } = item;\n//         const obj = {\n//             taskName,\n//             isDone: isDone\n//         }\n//         try {\n//             const { success, message } = await UpdateTaskById(_id, obj)\n//             if (success) {\n//                 // show succes toast\n//                 toast(message, 'success');\n//             } else {\n//                 // show error toast\n//                 toast(message, 'error');\n//             }\n//             fetchAllTasks();\n\n//         } catch (error) {\n//             console.error(error);\n//             toast(\"Failed to Create to Task\", 'error');\n//         }\n//     }\n\n//     const handleSearch = (e) => {\n//         const term = e.target.value.toLowerCase();\n//         const oldTasks = [...copyTask];\n//         const results = oldTasks.filter((item) => item.taskName.toLowerCase().includes(term));\n//         setTasks(results);\n//     }\n\n//     return (\n//         <div className='d-flex flex-column align-items-center w-50 m-auto mt-5'>\n//             <h1 className='mb-4'>Task Manager</h1>\n\n//             {/* Input and Search Box */}\n\n//             <div className='d-flex justify-content-between align-items-center mb-4 w-100'>\n//                 <div className='input-group flex-grow-1 me-2'>\n//                     <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder='Add a new Task' className='form-control mw-1' />\n//                     <button onClick={handleTask} className='btn btn-success btn-sm me-2'>\n//                         <FaPlus className='m-2' />\n//                     </button>\n//                 </div>\n//                 <div className='input-group flex-grow-1'>\n//                     <span className='input-group-text'>\n//                         <FaSearch />\n//                     </span>\n//                     <input onChange={handleSearch} type=\"text\" placeholder='Search Task' className='form-control mw-1' />\n//                 </div>\n//             </div>\n\n//             {/* Lists of items */}\n\n//             <div className='d-flex flex-column w-100'>\n//                 {\n//                     tasks.map((item) => (\n//                         <div key={item._id} className=\"m-2 p-2 border bg-light w-100 rounded-3 d-flex justify-content-between align-items-center\">\n//                             <span className={item.isDone ? 'text-decoration-line-through' : ''}>{item.taskName}</span>\n//                             <div>\n//                                 <button onClick={() => handleCheckAndUncheck(item)}\n//                                     className='btn btn-success btn-sm me-2' type='button'>\n//                                     <FaCheck />\n//                                 </button>\n//                                 <button onClick={() => setUpdateTask(item)}\n//                                     className='btn btn-primary btn-sm me-2' type='button'>\n//                                     <FaPenAlt />\n//                                 </button>\n//                                 <button onClick={() => handleDeleteTask(item._id)}\n//                                     className='btn btn-danger btn-sm me-2' type='button'>\n//                                     <FaTrash />\n//                                 </button>\n//                             </div>\n//                         </div>\n//                     ))\n//                 }\n//             </div>\n\n//             {/* Toastify */}\n\n//             <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\n//         </div>\n//     )\n// }\n// export default TaskManager;\n\nimport { useEffect, useState } from \"react\";\nimport { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { createTask, DeleteTaskById, getAllTaks, UpdateTaskById } from \"./api\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskManager() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  const [copyTask, setCopyTask] = useState([]);\n  const [updateTask, setUpdateTask] = useState(null);\n  const handleTask = () => {\n    if (updateTask && input) {\n      const obj = {\n        taskName: input,\n        isDone: updateTask.isDone,\n        _id: updateTask._id\n      };\n      handleUpdate(obj);\n    } else if (updateTask === null && input) {\n      handleAddTask();\n    }\n    setInput(\"\");\n  };\n  useEffect(() => {\n    if (updateTask) {\n      setInput(updateTask.taskName);\n    }\n  }, [updateTask]);\n  const handleAddTask = async () => {\n    const obj = {\n      taskName: input,\n      isDone: false\n    };\n    try {\n      const {\n        success,\n        message\n      } = await createTask(obj);\n      toast(message, {\n        type: success ? \"success\" : \"error\"\n      });\n      fetchAllTasks();\n    } catch (error) {\n      console.error(error);\n      toast(\"Failed to Create Task\", {\n        type: \"error\"\n      });\n    }\n  };\n  const fetchAllTasks = async () => {\n    try {\n      const {\n        data\n      } = await getAllTaks();\n      setTasks(data);\n      setCopyTask(data);\n    } catch (error) {\n      console.error(error);\n      toast(\"Failed to Fetch Tasks\", {\n        type: \"error\"\n      });\n    }\n  };\n  useEffect(() => {\n    fetchAllTasks();\n  }, []);\n  const handleDeleteTask = async id => {\n    try {\n      const {\n        success,\n        message\n      } = await DeleteTaskById(id);\n      toast(message, {\n        type: success ? \"success\" : \"error\"\n      });\n      fetchAllTasks();\n    } catch (error) {\n      console.error(error);\n      toast(\"Failed to Delete Task\", {\n        type: \"error\"\n      });\n    }\n  };\n  const handleCheckAndUncheck = async item => {\n    const {\n      _id,\n      isDone,\n      taskName\n    } = item;\n    const obj = {\n      taskName,\n      isDone: !isDone\n    };\n    try {\n      const {\n        success,\n        message\n      } = await UpdateTaskById(_id, obj);\n      toast(message, {\n        type: success ? \"success\" : \"error\"\n      });\n      fetchAllTasks();\n    } catch (error) {\n      console.error(error);\n      toast(\"Failed to Update Task\", {\n        type: \"error\"\n      });\n    }\n  };\n  const handleUpdate = async item => {\n    const {\n      _id,\n      isDone,\n      taskName\n    } = item;\n    const obj = {\n      taskName,\n      isDone\n    };\n    try {\n      const {\n        success,\n        message\n      } = await UpdateTaskById(_id, obj);\n      toast(message, {\n        type: success ? \"success\" : \"error\"\n      });\n      fetchAllTasks();\n    } catch (error) {\n      console.error(error);\n      toast(\"Failed to Update Task\", {\n        type: \"error\"\n      });\n    }\n  };\n  const handleSearch = e => {\n    const term = e.target.value.toLowerCase();\n    const results = copyTask.filter(item => item.taskName.toLowerCase().includes(term));\n    setTasks(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 flex justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-white rounded-2xl shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-center mb-6 text-gray-800\",\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col sm:flex-row gap-3 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full sm:w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            type: \"text\",\n            placeholder: \"Add a new task...\",\n            className: \"flex-1 px-3 py-2 border rounded-l-lg outline-none focus:ring-2 focus:ring-green-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTask,\n            className: \"px-4 bg-green-500 text-white rounded-r-lg hover:bg-green-600\",\n            children: /*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full sm:w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"px-3 flex items-center bg-gray-200 rounded-l-lg\",\n            children: /*#__PURE__*/_jsxDEV(FaSearch, {\n              className: \"text-gray-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: handleSearch,\n            type: \"text\",\n            placeholder: \"Search task...\",\n            className: \"flex-1 px-3 py-2 border rounded-r-lg outline-none focus:ring-2 focus:ring-blue-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: tasks.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center bg-gray-50 p-3 rounded-xl shadow-sm hover:shadow-md transition flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-gray-700 ${item.isDone ? \"line-through text-gray-400\" : \"\"}`,\n            children: item.taskName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 mt-2 sm:mt-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckAndUncheck(item),\n              className: \"p-2 bg-green-500 text-white rounded-lg hover:bg-green-600\",\n              children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setUpdateTask(item),\n              className: \"p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n              children: /*#__PURE__*/_jsxDEV(FaPenAlt, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteTask(item._id),\n              className: \"p-2 bg-red-500 text-white rounded-lg hover:bg-red-600\",\n              children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskManager, \"ZDGV0j3iip3ZoSpEHkoFOlGkh68=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["useEffect","useState","FaCheck","FaPenAlt","FaPlus","FaSearch","FaTrash","toast","ToastContainer","createTask","DeleteTaskById","getAllTaks","UpdateTaskById","jsxDEV","_jsxDEV","TaskManager","_s","input","setInput","tasks","setTasks","copyTask","setCopyTask","updateTask","setUpdateTask","handleTask","obj","taskName","isDone","_id","handleUpdate","handleAddTask","success","message","type","fetchAllTasks","error","console","data","handleDeleteTask","id","handleCheckAndUncheck","item","handleSearch","e","term","target","value","toLowerCase","results","filter","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","map","position","autoClose","hideProgressBar","_c","$RefreshReg$"],"sources":["D:/Projects/Project Task Manager App/frontend/src/TaskManager.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\r\n// import { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\r\n// import { toast, ToastContainer } from 'react-toastify';\r\n// import { createTask, DeleteTaskById, getAllTaks, UpdateTaskById } from './api';\r\n\r\n// function TaskManager() {\r\n\r\n//     const [input, setInput] = useState('');\r\n//     const [tasks, setTasks] = useState([]);\r\n//     const [copyTask, setCopyTask] = useState([]);\r\n//     const [updateTask, setUpdateTask] = useState(null);\r\n\r\n//     const handleTask = () => {\r\n//         if (updateTask && input) {\r\n//             // update api call\r\n//             const obj = {\r\n//                 taskName: input,\r\n//                 isDone: updateTask.isDone,\r\n//                 _id: updateTask._id\r\n//             }\r\n//             handleUpdate(obj);\r\n\r\n//         } else if (updateTask === null && input) {\r\n//             // Create api call\r\n\r\n//             handleAddTask();\r\n//         }\r\n//         setInput('');\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         if (updateTask) {\r\n//             setInput(updateTask.taskName);\r\n//         }\r\n//     }, [updateTask]);\r\n\r\n//     const handleAddTask = async () => {\r\n//         const obj = {\r\n//             taskName: input,\r\n//             isDone: false\r\n//         }\r\n//         try {\r\n//             const { success, message } = await createTask(obj);\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 toast(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 toast(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toast(\"Failed to Create to Task\", 'error');\r\n//         }\r\n\r\n//     }\r\n\r\n//     const fetchAllTasks = async () => {\r\n//         try {\r\n//             const { data } = await getAllTaks();\r\n//             setTasks(data);\r\n//             setCopyTask(data);\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toast(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n//     useEffect(() => {\r\n//         fetchAllTasks();\r\n//     }, []);\r\n\r\n//     const handleDeleteTask = async (id) => {\r\n//         try {\r\n//             const { success, message } = await DeleteTaskById(id)\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 toast(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 toast(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toast(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleCheckAndUncheck = async (item) => {\r\n//         const { _id, isDone, taskName } = item;\r\n//         const obj = {\r\n//             taskName,\r\n//             isDone: !isDone\r\n//         }\r\n//         try {\r\n//             const { success, message } = await UpdateTaskById(_id, obj)\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 toast(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 toast(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toast(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleUpdate = async (item) => {\r\n//         const { _id, isDone, taskName } = item;\r\n//         const obj = {\r\n//             taskName,\r\n//             isDone: isDone\r\n//         }\r\n//         try {\r\n//             const { success, message } = await UpdateTaskById(_id, obj)\r\n//             if (success) {\r\n//                 // show succes toast\r\n//                 toast(message, 'success');\r\n//             } else {\r\n//                 // show error toast\r\n//                 toast(message, 'error');\r\n//             }\r\n//             fetchAllTasks();\r\n\r\n//         } catch (error) {\r\n//             console.error(error);\r\n//             toast(\"Failed to Create to Task\", 'error');\r\n//         }\r\n//     }\r\n\r\n//     const handleSearch = (e) => {\r\n//         const term = e.target.value.toLowerCase();\r\n//         const oldTasks = [...copyTask];\r\n//         const results = oldTasks.filter((item) => item.taskName.toLowerCase().includes(term));\r\n//         setTasks(results);\r\n//     }\r\n\r\n//     return (\r\n//         <div className='d-flex flex-column align-items-center w-50 m-auto mt-5'>\r\n//             <h1 className='mb-4'>Task Manager</h1>\r\n\r\n//             {/* Input and Search Box */}\r\n\r\n//             <div className='d-flex justify-content-between align-items-center mb-4 w-100'>\r\n//                 <div className='input-group flex-grow-1 me-2'>\r\n//                     <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder='Add a new Task' className='form-control mw-1' />\r\n//                     <button onClick={handleTask} className='btn btn-success btn-sm me-2'>\r\n//                         <FaPlus className='m-2' />\r\n//                     </button>\r\n//                 </div>\r\n//                 <div className='input-group flex-grow-1'>\r\n//                     <span className='input-group-text'>\r\n//                         <FaSearch />\r\n//                     </span>\r\n//                     <input onChange={handleSearch} type=\"text\" placeholder='Search Task' className='form-control mw-1' />\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Lists of items */}\r\n\r\n//             <div className='d-flex flex-column w-100'>\r\n//                 {\r\n//                     tasks.map((item) => (\r\n//                         <div key={item._id} className=\"m-2 p-2 border bg-light w-100 rounded-3 d-flex justify-content-between align-items-center\">\r\n//                             <span className={item.isDone ? 'text-decoration-line-through' : ''}>{item.taskName}</span>\r\n//                             <div>\r\n//                                 <button onClick={() => handleCheckAndUncheck(item)}\r\n//                                     className='btn btn-success btn-sm me-2' type='button'>\r\n//                                     <FaCheck />\r\n//                                 </button>\r\n//                                 <button onClick={() => setUpdateTask(item)}\r\n//                                     className='btn btn-primary btn-sm me-2' type='button'>\r\n//                                     <FaPenAlt />\r\n//                                 </button>\r\n//                                 <button onClick={() => handleDeleteTask(item._id)}\r\n//                                     className='btn btn-danger btn-sm me-2' type='button'>\r\n//                                     <FaTrash />\r\n//                                 </button>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))\r\n//                 }\r\n//             </div>\r\n\r\n//             {/* Toastify */}\r\n\r\n//             <ToastContainer position='top-right' autoClose={3000} hideProgressBar={false} />\r\n//         </div>\r\n//     )\r\n// }\r\n// export default TaskManager;\r\n\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { FaCheck, FaPenAlt, FaPlus, FaSearch, FaTrash } from \"react-icons/fa\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport {\r\n  createTask,\r\n  DeleteTaskById,\r\n  getAllTaks,\r\n  UpdateTaskById,\r\n} from \"./api\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction TaskManager() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [copyTask, setCopyTask] = useState([]);\r\n  const [updateTask, setUpdateTask] = useState(null);\r\n\r\n  const handleTask = () => {\r\n    if (updateTask && input) {\r\n      const obj = {\r\n        taskName: input,\r\n        isDone: updateTask.isDone,\r\n        _id: updateTask._id,\r\n      };\r\n      handleUpdate(obj);\r\n    } else if (updateTask === null && input) {\r\n      handleAddTask();\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateTask) {\r\n      setInput(updateTask.taskName);\r\n    }\r\n  }, [updateTask]);\r\n\r\n  const handleAddTask = async () => {\r\n    const obj = { taskName: input, isDone: false };\r\n    try {\r\n      const { success, message } = await createTask(obj);\r\n      toast(message, { type: success ? \"success\" : \"error\" });\r\n      fetchAllTasks();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast(\"Failed to Create Task\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const fetchAllTasks = async () => {\r\n    try {\r\n      const { data } = await getAllTaks();\r\n      setTasks(data);\r\n      setCopyTask(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast(\"Failed to Fetch Tasks\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllTasks();\r\n  }, []);\r\n\r\n  const handleDeleteTask = async (id) => {\r\n    try {\r\n      const { success, message } = await DeleteTaskById(id);\r\n      toast(message, { type: success ? \"success\" : \"error\" });\r\n      fetchAllTasks();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast(\"Failed to Delete Task\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleCheckAndUncheck = async (item) => {\r\n    const { _id, isDone, taskName } = item;\r\n    const obj = { taskName, isDone: !isDone };\r\n    try {\r\n      const { success, message } = await UpdateTaskById(_id, obj);\r\n      toast(message, { type: success ? \"success\" : \"error\" });\r\n      fetchAllTasks();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast(\"Failed to Update Task\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (item) => {\r\n    const { _id, isDone, taskName } = item;\r\n    const obj = { taskName, isDone };\r\n    try {\r\n      const { success, message } = await UpdateTaskById(_id, obj);\r\n      toast(message, { type: success ? \"success\" : \"error\" });\r\n      fetchAllTasks();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast(\"Failed to Update Task\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    const term = e.target.value.toLowerCase();\r\n    const results = copyTask.filter((item) =>\r\n      item.taskName.toLowerCase().includes(term)\r\n    );\r\n    setTasks(results);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex justify-center p-4\">\r\n      <div className=\"w-full max-w-2xl bg-white rounded-2xl shadow-lg p-6\">\r\n        <h1 className=\"text-2xl font-bold text-center mb-6 text-gray-800\">\r\n          Task Manager\r\n        </h1>\r\n\r\n        {/* Input & Search */}\r\n        <div className=\"flex flex-col sm:flex-row gap-3 mb-6\">\r\n          <div className=\"flex w-full sm:w-1/2\">\r\n            <input\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Add a new task...\"\r\n              className=\"flex-1 px-3 py-2 border rounded-l-lg outline-none focus:ring-2 focus:ring-green-400\"\r\n            />\r\n            <button\r\n              onClick={handleTask}\r\n              className=\"px-4 bg-green-500 text-white rounded-r-lg hover:bg-green-600\"\r\n            >\r\n              <FaPlus />\r\n            </button>\r\n          </div>\r\n          <div className=\"flex w-full sm:w-1/2\">\r\n            <span className=\"px-3 flex items-center bg-gray-200 rounded-l-lg\">\r\n              <FaSearch className=\"text-gray-600\" />\r\n            </span>\r\n            <input\r\n              onChange={handleSearch}\r\n              type=\"text\"\r\n              placeholder=\"Search task...\"\r\n              className=\"flex-1 px-3 py-2 border rounded-r-lg outline-none focus:ring-2 focus:ring-blue-400\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Task List */}\r\n        <div className=\"space-y-3\">\r\n          {tasks.map((item) => (\r\n            <div\r\n              key={item._id}\r\n              className=\"flex justify-between items-center bg-gray-50 p-3 rounded-xl shadow-sm hover:shadow-md transition flex-wrap\"\r\n            >\r\n              <span\r\n                className={`text-gray-700 ${\r\n                  item.isDone ? \"line-through text-gray-400\" : \"\"\r\n                }`}\r\n              >\r\n                {item.taskName}\r\n              </span>\r\n              <div className=\"flex gap-2 mt-2 sm:mt-0\">\r\n                <button\r\n                  onClick={() => handleCheckAndUncheck(item)}\r\n                  className=\"p-2 bg-green-500 text-white rounded-lg hover:bg-green-600\"\r\n                >\r\n                  <FaCheck />\r\n                </button>\r\n                <button\r\n                  onClick={() => setUpdateTask(item)}\r\n                  className=\"p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\r\n                >\r\n                  <FaPenAlt />\r\n                </button>\r\n                <button\r\n                  onClick={() => handleDeleteTask(item._id)}\r\n                  className=\"p-2 bg-red-500 text-white rounded-lg hover:bg-red-600\"\r\n                >\r\n                  <FaTrash />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Toastify */}\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskManager;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAIA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,gBAAgB;AAC7E,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,SACEC,UAAU,EACVC,cAAc,EACdC,UAAU,EACVC,cAAc,QACT,OAAO;AACd,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}